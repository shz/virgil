#!/usr/bin/env node

var fs = require('fs')
  , clc = require('cli-color')
  , vzs = require('../lib')
  ;

// TODO - Debug params
var options = {
  debug: false,
  module: false,
  node: false
};

var args = [];
for (var i=2; i<process.argv.length; i++) {
  var arg = process.argv[i];

  switch (arg) {
    case '-d':
    case '--debug':
      options.debug = true;
      break;

    case '-m':
    case '--module':
      options.module = true;
      break;

    case '--node':
      options.node = true;
      break;

    default:
      if (arg[0] == '-') {
        console.log('Unknown option', arg);
      } else {
        args.push(arg);
        break;
      }
    case '-h':
    case '--help':
      console.log('Usage: virgil-js [-d|--debug] [-m|--module [--node]] FILE');
      console.log('');
      process.exit(0);
      break;
  }
}

fs.readFile(args[0], {encoding: 'utf8'}, function(err, src) {
  if (err) throw err;

  try {
    if (options.module) {
      var opts = {
        node: options.node,
        moduleName: args[0].replace(/\.vgl$/, '').replace(/[\/\\]/g, '.')
      };
      console.log(vzs.compileModule(src, 'javascript', opts));
    } else {
      console.log(vzs.compile(src, 'javascript'));
    }
  } catch (err) {
    var lines = src.split(/\r?\n/g);

    for (var i=Math.max(0, err.line - 3); i<Math.min(lines.length, err.line + 2); i++) {
      var parts = [ i + 1 + ':'
                  , ' ' + lines[i].substring(0, err.colStart)
                  , lines[i].substring(err.colStart, err.colEnd)
                  , lines[i].substring(err.colEnd)
                  ];

      if (i + 1 == err.line) {
        parts[0] = clc.red.bgWhite(parts[0]);
        parts[2] = clc.red.bgWhite(parts[2]);
      }
      console.log(parts.join(''));
    }
    console.log('');
    if (options.debug)
      console.log(err.stack);
    else
      console.log(err.message);

    process.exit(1);
  }
});

