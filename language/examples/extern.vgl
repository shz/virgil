# Extern blocks are used to declare external APIs.  Any struct, method,
# variable declaration, or function defined in an extern block will
# be available to the surrounding scope.

extern {
  struct Console {
    a : int
    b : str
  }
  method log(c : Console, value : str)
  method warn(c : Console, value : str)
  function parseInt(s : str) : int
  console : Console
}

# Everything defined in the extern block is now usable just as
# if it was

console.log("sweet success")
console.log(console.b)

let i : int = parseInt("100")

# Externs also understand external namespaces, as well.
extern math {
  struct Thing {}
  function abs(a : int, b : int)
}

# Namespaced externs are used just the same as regular externs, but
# the resulting code that's generated uses namespace references.
abs(1, 2)

# For example, here's the resulting Javascript:
#   math.abs(1, 2)
# And the resulting C++:
#   math::abs(1, 2)

# Another example
let a = new Thing
